sudo: required

# Tell Travis we need docker
services:
    - docker

# Tell Travis to build the image using Dockerfile.dev
# We are only testing react app as only it has testcases
before_install:
    - docker build -t singhmanmeet87/react-test -f ./react-client/Dockerfile.dev ./react-client

# Tell Travis how to run test suite 
script:
    - docker run -e CI=true singhmanmeet87/react-test npm run test

# Tell Travis to build production images
after_success:
    - docker build -t singhmanmeet87/factorial-project-react-client:latest ./react-client
    - docker build -t singhmanmeet87/factorial-project-nginx:latest ./nginx
    - docker build -t singhmanmeet87/factorial-project-express-server:latest ./express-server
    - docker build -t singhmanmeet87/factorial-project-worker:latest ./worker
    # Login to docker CLI
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
    # Push images to docker hub
    - docker push singhmanmeet87/factorial-project-nginx:latest
    - docker push singhmanmeet87/factorial-project-express-server:latest
    - docker push singhmanmeet87/factorial-project-worker:latest
    - docker push singhmanmeet87/factorial-project-react-client:latest

# Tell Travis how to deploy code to AWS
#deploy:
#    provider: elasticbeanstalk # We will deploy code to Elastic Beanstalk
#    region: us-west-1 # Specify your region
#    app: "factorial-project-docker-multi-container" # Copy it from Elastic Beanstalk dashboard
#    env: "FactorialProjectDockerMultiContainer-env" # Copy it from Elastic Beanstalk dashboard
#    access_key_id: $AWS_ACCESS_KEY
#    secret_access_key: $AWS_SECRET_KEY
#    bucket_name: "elasticbeanstalk-us-west-1-034275272121" # Elastic Beanstalk will take code from S3 bucket and deploy it in container. Take it from AWS S3
#    bucket_path: "docker" # Folder where Travis CI will upload the code in zip file in this folder. Take it from AWS S3
#    on: 
#        branch: master # Deploy only when there are changes on master branch
